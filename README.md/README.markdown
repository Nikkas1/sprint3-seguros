Sistema de Seguros (Sprint 3)
Nomes dos Integrantes:
Carlos Bucker - RM 555812
Alexandre Ferreira - RM 565626
Filipe Melo - RM 564571
Luca Tiepolo Schmidt Morete - RM 560255
Mayara Mota - RM 563887

O foco desta fase foi transformar o projeto em uma aplica√ß√£o robusta com banco de dados e ferramentas para an√°lise de neg√≥cio.


Implementamos a persist√™ncia e relat√≥rios gerenciais:

Dados Guardados (SQLite): Todos os clientes, ap√≥lices, sinistros e usu√°rios agora s√£o salvos em um banco de dados SQLite, usando o SQLAlchemy. Com isso, os dados n√£o se perdem.

Migra√ß√£o Autom√°tica: Criamos o script src/migrations.py que l√™ seus arquivos JSON antigos (da Sprint 2) e os carrega automaticamente para o novo banco de dados.

Relat√≥rios √öteis: Adicionamos quatro relat√≥rios gerenciais essenciais:

Soma do Valor Total Segurado por Cliente (ap√≥lices ativas).

Contagem de Ap√≥lices Ativas por Tipo (Auto, Residencial, Vida).

Status dos Sinistros.

Ranking dos Clientes com mais Ap√≥lices Ativas.

Exporta√ß√£o CSV: Todos os relat√≥rios podem ser salvos em arquivos CSV para que voc√™ possa analis√°-los no Excel ou em outras ferramentas.

Seguran√ßa e Confirma√ß√£o: Agora √© obrigat√≥rio confirmar o cancelamento de uma ap√≥lice, evitando erros.

Prepara√ß√£o do Ambiente
Para rodar, s√≥ precisa ter o Python 3.x.

1. Crie seu ambiente virtual
python -m venv venv
source venv/bin/activate  # No Linux/macOS
.\venv\Scripts\activate   # No Windows

2. Instale as bibliotecas
pip install -r requirements.txt

(Lembre-se: Voc√™ deve ter um requirements.txt com as depend√™ncias, como SQLAlchemy.)

üîÑ Passo Crucial: Migrar Seus Dados Antigos
Se voc√™ tem dados da Sprint 2 em JSON, siga este passo:

1. Coloque os JSONs no lugar certo
Crie a pasta e coloque os tr√™s arquivos JSON l√°:

.
‚îî‚îÄ‚îÄ data/
    ‚îî‚îÄ‚îÄ sprint2/
        ‚îú‚îÄ‚îÄ clientes.json
        ‚îú‚îÄ‚îÄ apolices.json
        ‚îî‚îÄ‚îÄ sinistros.json

2. Execute a migra√ß√£o
Isso ir√° criar o arquivo do banco de dados (seguros.db) e carregar os dados.

python -m src.migrations

Aguarde a mensagem --- Migra√ß√£o Conclu√≠da ---.

"Para Entrar no Sistema"
O usu√°rio inicial √© sempre:

Usu√°rio :admin

Senha :Sompo123

Perfil: admin

"Para Rodar"
Inicie a aplica√ß√£o principal :

python -m src.main


Exemplos R√°pidos de Uso
O fluxo b√°sico do sistema ap√≥s o login.

1. Emiss√£o de uma Ap√≥lice
O processo exige que o cliente j√° esteja cadastrado.

Acesse o Menu: Ap√≥s o login como admin, selecione a op√ß√£o 2. Ap√≥lices.

Selecione o Fluxo: Selecione a op√ß√£o 1. Emitir nova Ap√≥lice.

Insira os Dados: Informe o CPF de um cliente existente, escolha o Tipo de Ap√≥lice (e.g., AUTO) e preencha as informa√ß√µes do bem segurado (e.g., valor do ve√≠culo, ano).

Confirma√ß√£o: O sistema exibir√° o pr√™mio calculado e o n√∫mero da ap√≥lice gerada.

2. Registro de um Sinistro
Acesse o Menu: Ap√≥s o login, selecione a op√ß√£o 3. Sinistros.

Selecione o Fluxo: Escolha a op√ß√£o 1. Registrar Sinistro.

Insira os Dados: Digite o N√∫mero da Ap√≥lice ativa para a qual o sinistro ser√° registrado e informe os detalhes (data, descri√ß√£o, valor estimado).

Status Inicial: O sinistro ser√° registrado com o status inicial de PENDENTE DE AN√ÅLISE.

3. Gera√ß√£o de Relat√≥rio e Exporta√ß√£o CSV
Acesse o Menu: Ap√≥s o login, selecione a op√ß√£o 4. Relat√≥rios.

Selecione o Relat√≥rio: Escolha um dos quatro relat√≥rios dispon√≠veis, por exemplo, 4. Ranking de Clientes com Mais Ap√≥lices.

Visualiza√ß√£o: O resultado ser√° exibido na tela do terminal.

Exporta√ß√£o: O sistema perguntar√°: Deseja exportar este relat√≥rio para CSV? (s/N). Se responder s, o arquivo ser√° salvo na pasta relatorios/.

Arquivo gerado: relatorios/ranking_clientes_[DATA_HORA].csv

Como Usar os Relat√≥rios
Ao escolher um relat√≥rio no menu, o sistema mostra a tabela na tela e pergunta se voc√™ quer exportar para CSV. Se disser 'sim', o arquivo √© salvo na pasta relatorios/.